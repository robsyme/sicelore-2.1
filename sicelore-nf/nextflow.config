
/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    sicelore-nf Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

//process.executor = 'sge'
process.memory = '12G'
process.cpus = 4
process.penv = 'smp'
process.clusterOptions = '-S /bin/bash' 

params {
    // Max resource options, defaults only, expecting to be overwritten
    max_memory			= '12.GB'
    max_cpus			= 4
    max_time			= '240.h'
    javaXmx                       = '-Xmx12g'

    // Input options, defaults only, expecting to be overwritten
    fastqdir                    = "$PWD/Data/fastq_pass/"
    PREFIX			= 'sicelore'
    project 			= 'sicelore-2.1'
    outdir                      = 'outputdir_nf'
    
    tracedir                    = "${params.outdir}/pipeline_info"
    tmpdir                      = "${params.outdir}/tmp"
    scandir			= '01.readscan'
    mappingdir			= '02.mapping'
    umisdir			= '03.umis'
    matrixdir			= '04a.matrices'
    matrixconsdir		= '04b.matrices'
    snpdir			= '05.snps'
    fusiondir			= '06.fusion'
    noveldir			= '07.novels'
	
    // Tools and ressources, defaults only, expecting to be overwritten
    java 			= 'java'
    samtools			= 'samtools'
    minimap2 			= 'minimap2'
    nanopore 			= "$PWD/Jar/NanoporeBC_UMI_finder-2.1.jar"
    sicelore 			= "$PWD/Jar/Sicelore-2.1.jar"
    juncbed			= "$PWD/Data/gencode.v38.chr12.bed"
    minimapfasta                  = "$PWD/Data/chr12.fa.gz"
    refflat			= "$PWD/Data/gencode.v38.chr12.refFlat"

    // SAM Tags
    CELLTAG			= 'BC'
    UMITAG 			= 'U8'
    GENETAG			= 'GE'
    TSOENDTAG 			= 'TE'
    POLYASTARTTAG		= 'PS'
    CDNATAG			= 'CS'
    USTAG			= 'US'
    RNTAG			= 'RN'
    MAPQV0			= 'false'
    MINUMI			= 1
    ED0ED1RATIO			= 1
    MAXREADS			= 20
    MINPS			= 3
    MAXPS			= 20
    DEBUG			= 'false'
    USE_STRAND_INFO		= 'true'
    ALLOW_MULTI_GENE_READS      = 'true'
    METHOD			= 'STRICT'
    DELTA			= 2
    AMBIGUOUS_ASSIGN            = 'false'
    MAXCLIP			= 150
    ISOBAM			= 'true'
 	
    email		       = 'lebrigand@ipmc.cnrs.fr'
    email_on_fail               = 'lebrigand@ipmc.cnrs.fr'
    plaintext_email             = false
    monochrome_logs             = false
    help                        = false
    validate_params             = true
    show_hidden_params          = false
    enable_conda                = false
}

profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        process.conda          = "$baseDir/conda_env.yaml"
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
}

// Load base.config by default for all pipelines
// includeConfig 'conf/base.config'

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}






